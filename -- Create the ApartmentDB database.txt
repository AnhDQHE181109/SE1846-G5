-- Create the ApartmentDB database
CREATE DATABASE ApartmentDB;
USE ApartmentDB;

-- Create Rolls table first
CREATE TABLE Rolls (
    rollID INT PRIMARY KEY,
    roll_name VARCHAR(10)
);

-- Create Accounts table
CREATE TABLE Accounts (
    userID INT PRIMARY KEY,
    username VARCHAR(50) UNIQUE,
    password VARCHAR(50),
    firstname VARCHAR(50),
    lastname VARCHAR(50),
    phone_number VARCHAR(15),
    email VARCHAR(100),
    profile_picture_link VARCHAR(255),
    rollID INT,
    FOREIGN KEY (rollID) REFERENCES Rolls(rollID)
);

-- Create ApartmentTypes table
CREATE TABLE ApartmentTypes (
    typeID INT PRIMARY KEY,
    a_picture_link VARCHAR(255),
    size VARCHAR(50),
    base_rent DECIMAL(10, 2)
);
-- Create Apartments table
CREATE TABLE Apartments (
    apartmentID INT PRIMARY KEY,
    typeID INT,
    occupied BIT,
    FOREIGN KEY (typeID) REFERENCES ApartmentTypes(typeID),
);

-- Create Residents table
CREATE TABLE Residents (
    residentID INT PRIMARY KEY,
    userID INT,
    apartmentID INT,
    billingdate DATE,
    FOREIGN KEY (userID) REFERENCES Accounts(userID),
    FOREIGN KEY (apartmentID) REFERENCES Apartments(apartmentID)
);

-- Create Bills table
CREATE TABLE Bills (
    billID INT PRIMARY KEY,
    residentID INT,
    status VARCHAR(10),
    total DECIMAL(10, 2),
    billdate DATE,
    FOREIGN KEY (residentID) REFERENCES Residents(residentID)
);

-- Create Billdetails table
CREATE TABLE Billdetails (
    billdetailID INT PRIMARY KEY,
    billID INT,
    base_rent DECIMAL(10, 2),
    water_bill DECIMAL(10, 2),
    electricity_bill DECIMAL(10, 2),
    service_bill DECIMAL(10, 2),
    FOREIGN KEY (billID) REFERENCES Bills(billID)
);

-- Create Worker table
CREATE TABLE Worker (
    workerID INT PRIMARY KEY,
    userID INT,
    base_salary DECIMAL(10, 2),
    salary_multi DECIMAL(5, 2),
    job VARCHAR(50),
    FOREIGN KEY (userID) REFERENCES Accounts(userID)
);

-- Create Service_Requests table
CREATE TABLE Service_Requests (
    requestID INT PRIMARY KEY,
    residentID INT,
    workerID INT,
    description TEXT,
    FOREIGN KEY (residentID) REFERENCES Residents(residentID),
    FOREIGN KEY (workerID) REFERENCES Worker(workerID)
);
